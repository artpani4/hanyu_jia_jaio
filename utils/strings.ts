// utils/strings.ts
import { SUPPORTED_LANGUAGES, SupportedLanguage } from "../types.ts";

// String keys for localization
type StringKey =
  | "WELCOME_MESSAGE"
  | "LANG_PICK"
  | "LANG_SELECTED"
  | "ADD_WORDS_INSTRUCTION"
  | "GET_TASK_BUTTON"
  | "ADD_WORDS_BUTTON"
  | "RESET_WORDS_BUTTON"
  | "ADMIN_STATS_BUTTON"
  | "NO_WORDS_ERROR"
  | "TASK_PROMPT"
  | "WORDS_ADDED"
  | "WORDS_IMPORT_ERROR"
  | "TASK_GENERATION_ERROR"
  | "HELP_MESSAGE"
  | "STATS_MESSAGE"
  | "STATS_NO_WORDS"
  | "RESET_CONFIRMATION"
  | "CONFIRM_YES"
  | "CONFIRM_NO"
  | "RESET_SUCCESS"
  | "RESET_CANCELED"
  | "ADMIN_STATS_MESSAGE";

const DEFAULT_STRINGS: Record<StringKey, string> = {
  WELCOME_MESSAGE:
    "üëã Welcome to the Chinese language learning bot!\n\nSelect interface language:",
  LANG_PICK: "üåç Choose language",
  LANG_SELECTED: "‚úÖ Interface language changed",
  ADD_WORDS_INSTRUCTION:
    "üìö Now add words to study. Send text in format:\nword|pinyin|character|translation\n\nExample:\nhello|n«ê h«éo|‰Ω†Â•Ω|hello",
  GET_TASK_BUTTON: "üìù Get new task",
  ADD_WORDS_BUTTON: "üìå Add words",
  RESET_WORDS_BUTTON: "üîÑ Reset words",
  ADMIN_STATS_BUTTON: "üìä Admin Stats",
  NO_WORDS_ERROR: "‚ö†Ô∏è You don't have any words added yet. Add words to study!",
  TASK_PROMPT: "‚ú® Practice with these sentences:",
  WORDS_ADDED: "‚úÖ Words successfully added!",
  WORDS_IMPORT_ERROR: "‚ùå Error importing words. Check format and try again.",
  TASK_GENERATION_ERROR: "‚ùå Error generating task. Please try later.",
  HELP_MESSAGE:
    "‚ÑπÔ∏è Bot commands:\n/start - Start\n/language - Change language\n/help - Show help\n/stats - Show word statistics\n/reset - Reset all your words\n\nWord addition format:\nword|pinyin|character|translation",
  STATS_MESSAGE:
    "üìä Your word statistics:\n\nTotal words: {total}\nUsed in tasks: {used}\nNot yet used: {unused}\n\nYour most used words:\n{top_words}",
  STATS_NO_WORDS: "‚ö†Ô∏è You don't have any words added yet to show statistics.",
  RESET_CONFIRMATION:
    "‚ö†Ô∏è Are you sure you want to delete all your words? This action cannot be undone.",
  CONFIRM_YES: "Yes, delete all",
  CONFIRM_NO: "No, keep my words",
  RESET_SUCCESS:
    "‚úÖ All your words have been deleted. You can start adding new words now.",
  RESET_CANCELED: "‚úÖ Operation canceled. Your words are safe.",
  ADMIN_STATS_MESSAGE:
    "üìä Admin Statistics:\n\nTotal users: {users_count}\nActive users (last 7 days): {active_users}\nTotal words: {words_count}\nAverage words per user: {avg_words}",
};

// Localized strings map
const STRINGS: Record<SupportedLanguage, Record<StringKey, string>> = {
  en: DEFAULT_STRINGS,
  ru: {
    WELCOME_MESSAGE:
      "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞!\n\n–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:",
    LANG_PICK: "üåç –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫",
    LANG_SELECTED: "‚úÖ –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∏–∑–º–µ–Ω–µ–Ω",
    ADD_WORDS_INSTRUCTION:
      "üìö –¢–µ–ø–µ—Ä—å –¥–æ–±–∞–≤—å—Ç–µ —Å–ª–æ–≤–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n—Å–ª–æ–≤–æ|–ø–∏–Ω—å–∏–Ω—å|–∏–µ—Ä–æ–≥–ª–∏—Ñ|–ø–µ—Ä–µ–≤–æ–¥\n\n–ü—Ä–∏–º–µ—Ä:\nhello|n«ê h«éo|‰Ω†Â•Ω|–ø—Ä–∏–≤–µ—Ç",
    GET_TASK_BUTTON: "üìù –ü–æ–ª—É—á–∏—Ç—å –Ω–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ",
    ADD_WORDS_BUTTON: "üìå –î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–∞",
    RESET_WORDS_BUTTON: "üîÑ –°–±—Ä–æ—Å–∏—Ç—å —Å–ª–æ–≤–∞",
    ADMIN_STATS_BUTTON: "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–¥–º–∏–Ω–∞",
    NO_WORDS_ERROR:
      "‚ö†Ô∏è –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤. –î–æ–±–∞–≤—å—Ç–µ —Å–ª–æ–≤–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è!",
    TASK_PROMPT: "‚ú® –ü–æ—Ç—Ä–µ–Ω–∏—Ä—É–π—Ç–µ—Å—å —Å —ç—Ç–∏–º–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏:",
    WORDS_ADDED: "‚úÖ –°–ª–æ–≤–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!",
    WORDS_IMPORT_ERROR:
      "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ —Å–ª–æ–≤. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
    TASK_GENERATION_ERROR: "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–∞–¥–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
    HELP_MESSAGE:
      "‚ÑπÔ∏è –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:\n/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n/language - –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫\n/help - –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å\n/stats - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–ª–æ–≤\n/reset - –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –≤–∞—à–∏ —Å–ª–æ–≤–∞\n\n–§–æ—Ä–º–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–ª–æ–≤:\n—Å–ª–æ–≤–æ|–ø–∏–Ω—å–∏–Ω—å|–∏–µ—Ä–æ–≥–ª–∏—Ñ|–ø–µ—Ä–µ–≤–æ–¥",
    STATS_MESSAGE:
      "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∞—à–∏—Ö —Å–ª–æ–≤:\n\n–í—Å–µ–≥–æ —Å–ª–æ–≤: {total}\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –≤ –∑–∞–¥–∞–Ω–∏—è—Ö: {used}\n–ï—â–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {unused}\n\n–°–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ:\n{top_words}",
    STATS_NO_WORDS:
      "‚ö†Ô∏è –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.",
    RESET_CONFIRMATION:
      "‚ö†Ô∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –≤–∞—à–∏ —Å–ª–æ–≤–∞? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.",
    CONFIRM_YES: "–î–∞, —É–¥–∞–ª–∏—Ç—å –≤—Å–µ",
    CONFIRM_NO: "–ù–µ—Ç, —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–ª–æ–≤–∞",
    RESET_SUCCESS:
      "‚úÖ –í—Å–µ –≤–∞—à–∏ —Å–ª–æ–≤–∞ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ —Å–ª–æ–≤–∞.",
    RESET_CANCELED: "‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞. –í–∞—à–∏ —Å–ª–æ–≤–∞ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.",
    ADMIN_STATS_MESSAGE:
      "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\n–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users_count}\n–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π): {active_users}\n–í—Å–µ–≥–æ —Å–ª–æ–≤: {words_count}\n–°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {avg_words}",
  },
  // Simplified for this example - we'll include English and Russian only
  // with placeholders for other languages
  zh: { ...getDefaultStrings() },
  es: { ...getDefaultStrings() },
  fr: { ...getDefaultStrings() },
  de: { ...getDefaultStrings() },
  it: { ...getDefaultStrings() },
  pt: { ...getDefaultStrings() },
};

// Default strings function now uses the separate constant
function getDefaultStrings(): Record<StringKey, string> {
  return { ...DEFAULT_STRINGS };
}

// Detect user language from Telegram language code
export function detectLang(langCode?: string): SupportedLanguage {
  if (!langCode) return "en";

  const shortCode = langCode.toLowerCase().substring(0, 2) as SupportedLanguage;

  return SUPPORTED_LANGUAGES.includes(shortCode) ? shortCode : "en";
}

// Get a localized string
export function getString(
  lang: SupportedLanguage,
  key: StringKey,
  params?: Record<string, string | number>,
): string {
  let text = STRINGS[lang][key] || STRINGS.en[key];

  // Replace parameters if provided
  if (params) {
    for (const [paramKey, paramValue] of Object.entries(params)) {
      text = text.replace(`{${paramKey}}`, String(paramValue));
    }
  }

  return text;
}
